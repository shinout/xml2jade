// Generated by CoffeeScript 1.7.1
(function() {
  var i, parse, read, run, spaces, xmldoc;

  xmldoc = require("xmldoc");

  read = require("fs").readFileSync.bind("fs");

  spaces = ((function() {
    var _i, _results;
    _results = [];
    for (i = _i = 0; _i <= 100; i = ++_i) {
      _results.push(" ");
    }
    return _results;
  })()).join(" ");

  run = function(filename) {
    var doc, xml;
    xml = read(filename, "utf8");
    doc = new xmldoc.XmlDocument(xml);
    return parse(doc, 0);
  };

  parse = function(node, hier) {
    var attrs, child, cls, id, k, ret, txt, v, _i, _len, _ref, _ref1;
    if (hier == null) {
      hier = 0;
    }
    ret = "";
    id = node.attr.id != null ? "#" + node.attr.id : "";
    cls = node.attr["class"] != null ? "." + (node.attr["class"].split(" ").join(".")) : "";
    attrs = [];
    _ref = node.attr;
    for (k in _ref) {
      v = _ref[k];
      if (k === "id" || k === "class") {
        continue;
      }
      attrs.push("" + k + "=\"" + v + "\"");
    }
    attrs = attrs.length ? "(" + (attrs.join(", ")) + ")" : "";
    txt = node.val.trim();
    if (txt) {
      txt = " " + txt;
    }
    ret += spaces.slice(0, hier) + node.name + id + cls + attrs + txt + "\n";
    if (node.children.length) {
      _ref1 = node.children;
      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
        child = _ref1[_i];
        ret += parse(child, hier + 2);
      }
    }
    return ret;
  };

  module.exports = {
    run: run,
    parse: parse
  };

}).call(this);
